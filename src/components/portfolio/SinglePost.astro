---
import { Icon } from 'astro-icon/components';

import Image from '~/components/common/Image.astro';
import PostTags from '~/components/blog/Tags.astro';
import SocialShare from '~/components/common/SocialShare.astro';
import { Markdown } from '@astropub/md';
import Hero2 from '~/components/widgets/Hero2.astro';
import RelatedPages from '~/components/portfolio/RelatedPages.astro';
import RelatedLinks from '~/components/portfolio/RelatedLinks.astro';
import Review from '~/components/portfolio/Review.astro';

import { getPermalink } from '~/utils/permalinks';
import { getFormattedDate, minuteCase } from '~/utils/utils';

import type { Post } from '~/types';

export interface Props {
  post: Post;
  url: string | URL;
}

const { post, url } = Astro.props;
const { Content } = post;
---

<section class="py-0 mx-auto grow-0 shrink-0">
  <article>
  
    <Hero2
      title={post.title}
      image={{
        src: post.image,
        alt: post.imageAlt || '',
      }}
      imageName={post.imageName}
    >
      
      <Fragment slot="subtitle">
        <Markdown.Inline of={post.excerpt} />
      </Fragment>
      
      <Fragment slot="result">           
        <div class="flex flex-row justify-between mt-8 mb-8 mx-auto md:mx-0 lg:mx-auto">
          
          <div><h3 class="mb-1 text-base">Цена</h3><span class="mb-1 text-xl sm:text-4xl font-heading">{post.budget}</span></div>
          <div><h3 class="mb-1 text-base">Сроки</h3><span class="mb-1 text-xl sm:text-4xl font-heading">{post.time}</span></div>
        
          <div>
            <h3 class="mb-1 text-base">Результат</h3>
            {post.result?.map((res) => (
            <div class="format-subtitle-markdown">
              <a class="flex flex-row items-center gap-1 mb-2" href={res.link}><Image src={res.src} alt="Figma logo" height={40} width={30}/>{res.text}</a>
            </div>
            ))}
          </div>
        </div>
      </Fragment>
    
      <Fragment slot="supertitle">
        <div class="flex justify-between flex-col sm:flex-row max-w-3xl mx-auto md:mx-0 lg:mx-auto mt-0 mb-2">
          <p>
            {
              post.publishYear
            }       
          </p>
        </div>
      </Fragment>
      
    </Hero2>

    <div class="flex flex-col lg:flex-row justify-between max-w-7xl mx-auto md:mx-0 lg:mx-auto">
      <div class="grow-0 shrink-0 max-w-5xl">
        <div
          class="format-markdown mx-auto md:mx-0 lg:mx-auto px-6 sm:px-6 max-w-3xl prose prose-md lg:prose-xl dark:prose-invert dark:prose-headings:text-slate-300 prose-headings:font-heading prose-headings:leading-tighter prose-img:rounded-md prose-img:shadow-lg mt-8 prose-headings:scroll-mt-[80px] prose-li:my-0"
        >
          <Markdown.Inline of={post.context} />
          <slot />
        </div>
        {post.outcome && (
            <div class="mb-8 md:mb-20 flex flex-col gap-4 mx-auto md:mx-0 lg:mx-auto px-6 sm:px-6 max-w-3xl border-t-[#DBDBDB]">
              <h2 class="text-5xl font-heading">{post.outcome.title}</h2>
              {post.outcome.text1 && (<p class="text-base">{post.outcome.text1}</p>)}
              <div class="flex flex-row justify-between gap-6">
                
                {post.outcome.numbers?.map((out) => (     
                <div class="basis-0 grow"><h3 class="mb-1 text-base">{out.title}</h3><p class="mb-1 text-xl sm:text-4xl font-heading">{out.number}</p><p class="mb-1 text-base">{out.text}</p></div>
                ))}
               
              </div>
              <p class="text-base">{post.outcome.text2}</p>
            </div>
            )}
      </div>
      <div class="lg:max-w-[320px]">
        <RelatedPages post={post} />
      </div>
    </div>
    
    
    
    <Review post={post} />
    
    {/* <RelatedLinks post={post} /> */}
    
  </article>
  
</section>
