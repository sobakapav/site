---
import type { Form as Props } from '~/types';
import Button from '~/components/ui/Button.astro';
import { SITE } from 'astrowind:config';

const { inputs, textarea, disclaimer, button = 'Contact us', description = '' } = Astro.props;
---

<form
  onsubmit="return window.sendForm(event)"
>
  {
    inputs &&
      inputs.map(
        ({ type = 'text', name, label = '', autocomplete = 'on', placeholder = '' }) =>
          name && (
            <div class="mb-6">
              {label && (
                <label for={name} class="block text-sm font-medium">
                  {label}
                </label>
              )}
              <input
                type={type}
                name={name}
                id={name}
                autocomplete={autocomplete}
                placeholder={placeholder}
                required
                class="form-input py-4 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
              />
            </div>
          )
      )
  }

  {
    textarea && (
      <div>
        <label for="textarea" class="block text-sm font-medium">
          {textarea.label}
        </label>
        <textarea
          id="textarea"
          name={textarea.name ? textarea.name : 'message'}
          rows={textarea.rows ? textarea.rows : 4}
          placeholder={textarea.placeholder}
          class="form-input py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
        />
      </div>
    )
  }

  {
    disclaimer && (
      <div class="mt-3 flex items-start">
        <div class="flex mt-0.5">
          <input
            id="disclaimer"
            name="disclaimer"
            type="checkbox"
            required
            class="form-input cursor-pointer mt-1 py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
          />
        </div>
        <div class="ml-3">
          <label for="disclaimer" class="cursor-pointer select-none text-sm text-gray-600 dark:text-gray-400">
            {disclaimer.label}
          </label>
        </div>
      </div>
    )
  }

  {
    button && (
      <div class="mt-10 grid">
        <Button variant="primary" type="submit" class="btn-contactus form-input">
          {button}
        </Button>
      </div>
    )
  }

  {
    description && (
      <div class="mt-3 text-center">
        <p class="text-sm text-gray-600 dark:text-gray-400">{description}</p>
      </div>
    )
  }
</form>

<dialog class="daisy-modal" id="form-modal-success">
  <div class="daisy-modal-box rounded-lg">
    <h3 class="text-[20px] font-bold mt-[-4px] mb-2">Все в порядке</h3>
    <div class="mb-2">Сообщение отправлено, мы прочтем и обязательно ответим.</div>
    <div className="daisy-modal-action">
      <form method="dialog">
        <button class="absolute right-4 top-4 text-[20px] font-bold">✕</button>
      </form>
    </div>
  </div>
  <form method="dialog" class="daisy-modal-backdrop">
    <button>close</button>
  </form>
</dialog>

<dialog class="daisy-modal" id="form-modal-fail">
  <div class="daisy-modal-box rounded-lg">
    <h3 class="text-[20px] font-bold mt-[-4px] mb-2">Что-то пошло не так</h3>
    <div class="mb-2">Извините, пожалуйста. Попробуйте еще раз или напишите нам на <a class="underline underline-offset-2 text-[--aw-color-accent]" href={`mailto:${SITE.email}`}>{SITE.email}</a>.</div>
    <div className="daisy-modal-action">
      <form method="dialog">
        <button class="absolute right-4 top-4 text-[20px] font-bold">✕</button>
      </form>
    </div>
  </div>
  <form method="dialog" class="daisy-modal-backdrop">
    <button>close</button>
  </form>
</dialog>

<script>
  function onFormSendSuccess() {
    var elements = document.querySelectorAll('form .form-input');
    for (var el of elements) {
      el.disabled = false;
    }
    document.getElementById('form-modal-success').showModal();
  }
  
  function onFormSendFail() {
    var elements = document.querySelectorAll('form .form-input');
    for (var el of elements) {
      el.disabled = false;
    }
    document.getElementById('form-modal-fail').showModal();
  }
  
  async function sendForm(event) {
    event.preventDefault();
  
    const form = event.target;
    const formData = {};
    
    const inputs = form.querySelectorAll('input, textarea');
    for (var input of inputs) {
      if ('checkbox' !== input.type && input.value) {
        formData[input.attributes['name'].value] = input.value;
      }
    }
  
    var elements = form.querySelectorAll('.form-input');
    for (var el of elements) {
      el.disabled = true;
    }
  
    try {
      const response = await fetch(
        "https://cb.neverhund.com/webhooks/tdr8inbc1ggi",
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(formData),
        }
      );
      
      if (response.ok) {
        onFormSendSuccess();
      } else {
        throw new Error("Ошибка сервера");
      }
    } catch (error) {
      onFormSendFail();
    }
    
    return false;
  }
  
  window.sendForm = sendForm;

</script>
