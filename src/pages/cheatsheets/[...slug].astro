---
import { getCollection } from 'astro:content';
import merge from 'lodash.merge';

import Layout from '~/layouts/PageLayout.astro';
import SinglePost from '~/components/cheatsheets/SinglePost.astro';
import Bread from '~/components/widgets/Bread.astro';
import { getCanonical, getPermalink } from '~/utils/permalinks';

export async function getStaticPaths() {
  const cheatsheets = await getCollection('cheatsheets');
  const entries = [];
  for (var entry of cheatsheets) {
    if (entry.data?.alias) {
      for (var alias of entry.data?.alias) {
        entries.push({params: { slug: alias }, props: { entry }});
      }
    } else {
      console.log(`Cannot find alias for entry: ${JSON.stringify(entry)}`);
    }
  }
  
  return entries;
}

const { entry } = Astro.props;

const nextEntries = [];
const cheatsheets = await getCollection('cheatsheets');

const idx = cheatsheets.findIndex(e => (e.id === entry.id));
if (idx >= 0) {
  for (var i = 0; i < 3; i++) {
    const n = cheatsheets[(idx + i + 1) % cheatsheets.length];  
    nextEntries.push({ title: n.data.title, link: `/cheatsheets/${n.data.alias[0]}` });
  }
}

const metadata = merge(
  {
    title: entry.data.metadata?.title,
    description: entry.data.metadata?.description,
    robots: {
      index: true,
      follow: true,
    },
    openGraph: {
      images: [{
            url: '~/assets/images/cheatsheets.png',
            width: 1200,
            height: 630
          }],
      type: 'article',
      ...entry.data.metadata?.openGraph,
    },
  },
  { ...(entry?.metadata ? { ...entry.metadata, canonical: entry.metadata?.canonical || url } : {}) }
) as MetaData;

---

<Layout metadata={metadata}>
  <Bread
    title={entry.data.title}
    parent="/cheatsheets"
    parentTitle="Шпаргалки"
  />
    
  <SinglePost post={{ ...entry.data }} next={nextEntries}/>
</Layout>
