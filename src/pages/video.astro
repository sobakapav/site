---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';

import { getCollection } from 'astro:content';
import { Markdown } from '@astropub/md';
import { getFormattedDate } from '~/utils/utils';

import Layout from '~/layouts/PageLayout.astro';
import Hund3 from '~/components/widgets/Hund3.astro';
import Bread from '~/components/widgets/Bread.astro';

const { page } = Astro.props as Props;

const metadata = {
  title: 'Видео • Дизайн сложных интерфейсов',
  canonical: 'https://sobakapav.ru/video',
  description: "Как на самом деле выглядит работа над дизайном интерфейсов? Что делают дизайнеры, менеджеры, аналитики и разработчики? Зачем это все и кому нужен результат? Показываем UX и аналитику, frontend-разработку и управление. Профессиональные секреты выдаём, но надо всматриваться.", 
  robots: {
    index: true,
    follow: true,
  },
  openGraph: {
    site_name: 'Собака Павлова',
    images: [{
      url: '~/assets/images/video.png',
      width: 1200,
      height: 630
    }],
    type: 'website',
  },
};

const videoEntries = await getCollection('video');

const videos = videoEntries.map(entry => entry.data).sort((a, b) => b.publishDate - a.publishDate);
console.log(JSON.stringify(videoEntries));

---

<Layout metadata={metadata}>
  <Bread title="Видео" />
    
  <Hund3
    classes={{
      main: 'pb-10 md:pb-10',
      subtitle: 'mb-0',
    }}
  >
    <Fragment slot="title">
      Видео
    </Fragment>

    <Fragment slot="subtitle">
      Как на самом деле выглядит работа над дизайном интерфейсов? Что делают дизайнеры, менеджеры, аналитики и разработчики? Зачем это все и кому нужен результат?
      
      Показываем UX и аналитику, frontend-разработку и управление. Профессиональные секреты выдаём, но надо всматриваться.
      
      Смотрите, пожалуйста ↓↓↓   
    </Fragment>
  </Hund3>
      
  <section class="px-6 sm:px-6 pb-12 sm:pb-16 lg:pb-20 mx-auto max-w-7xl">
    <div class="text-left pb-4 md:pb-6 max-w-7xl mx-auto justify-center">
      <ul class="flex md:grid md:grid-flow-row-dense md:grid-cols-portfolio-md md:max-w-[640px] lg:grid-cols-portfolio-lg lg:max-w-[960px] xl:grid-cols-portfolio xl:max-w-full flex-wrap justify-start list-none">
        { videos.map(video => (
          <li class="mb-6 w-80">
            <article class="flex flex-wrap mb-6 relative">
              <div class="relative overflow-hidden rounded image-animate">
                <div class="w-72 h-[162px]">
                  <iframe width="288" height="162" src={`https://www.youtube.com/embed/${video.videoId}`} title={video.title} frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
                </div>
                <div class="mt-4 w-72">
                  <header>
                    <h2 class="text-xl sm:text-3xl leading-tight mb-1 dark:text-slate-300 font-heading z-[2]">
                      <Markdown.Inline of={video.title} />
                    </h2>
                    <p class="flex-grow dark:text-slate-400 format-subtitle-markdown">
                      <Markdown.Inline of={video.description} />
                    </p>
                    <span class="flex flex-row text-xl sm:text-3xl leading-tight font-heading text-[--aw-color-hund] gap-4 items-center mt-2">
                      {getFormattedDate(video.publishDate)}
                    </span>
                  </header>
                </div>
              </div>                    
            </article>
          </li>
        )) }
      </ul>
    </div> 
  </section>
</Layout>
