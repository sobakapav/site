---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';

import { getCollection } from 'astro:content';
import merge from 'lodash.merge';
import type { ImageMetadata } from 'astro';
import { Markdown } from '@astropub/md';

import Layout from '~/layouts/PageLayout.astro';
import SinglePost from '~/components/blog/SinglePost.astro';
import ToBlogLink from '~/components/blog/ToBlogLink.astro';

import Image from '~/components/common/Image.astro';
import PostTags from '~/components/blog/Tags.astro';
import RelatedLinks from '~/components/services/RelatedLinks.astro';
import Features3 from '~/components/widgets/Features3.astro';

import Hund from '~/components/widgets/Hund.astro';

import { getCanonical, getPermalink } from '~/utils/permalinks';
import { getStaticPathsBlogPost, blogPostRobots } from '~/utils/blog';
import { findImage } from '~/utils/images';
import type { MetaData } from '~/types';
import RelatedPosts from '~/components/blog/RelatedPosts.astro';
import Bread from '~/components/widgets/Bread.astro';

import BlueBlock from '~/components/services/BlueBlock.astro';
import Budget from '~/components/services/Budget.astro';

export const prerender = true;

export async function getStaticPaths() {
  const services = await getCollection('services');
  return services.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { entry } = Astro.props;
const post = entry.data;
const { Content } = await entry.render();

const url = getCanonical(getPermalink(post.permalink, 'post'));
const image = (await findImage(post.image)) as ImageMetadata | string | undefined;

const notThisService = post.notThisService?.items?.map((item) => ({title: item.title, description: item.text}));

const metadata = merge(
  {
    title: post.title,
    description: post.description || post.excerpt,
    robots: {
      index: blogPostRobots?.index,
      follow: blogPostRobots?.follow,
    },
    openGraph: {
      type: 'article',
      ...(image ? { images: [{ url: image, width: (image as ImageMetadata)?.width, height: (image as ImageMetadata)?.height }] } : {}),
    },
  },
  { ...(post?.metadata ? { ...post.metadata, canonical: post.metadata?.canonical || url } : {}) }
) as MetaData;
---

<Layout metadata={metadata}>
  <Bread
    title={post.title}
    parent="/services"
    parentTitle="Услуги"
  />
    
    <section class="py-0 mx-auto grow-0 shrink-0">
      <article>
      
        <Hund
          image={{
            src: post.image,
            alt: post.imageAlt || '',
          }}
          imageName={post.imageName}
          hyphenateTitle={post.hyphenateTitle}
        >
          <Fragment slot="title">
            <Markdown.Inline of={post.title} />
          </Fragment>
        
          <Fragment slot="supertitle">
            <a href="/services" class="text-[#95001B] no-underline hover:underline underline-offset-2">← ВСЕ УСЛУГИ</a>
          </Fragment>
          
          <Fragment slot="subtitle">
            <Markdown.Inline of={post.excerpt} />
          </Fragment>
          
        </Hund>
        
        <div class="flex flex-row flex-wrap text-base gap-2.5 mt-8 px-4 md:px-6 mx-auto max-w-7xl text-[#9F9F9F]">
          <span>
            <a href="#1" class="no-underline hover:underline underline-offset-2">Потребности</a>
          </span><span> • </span>
          
          <span>
            <a href="#2" class="no-underline hover:underline underline-offset-2">Примеры</a>
          </span><span> • </span>
          
          <span>
            <a href="#3" class="no-underline hover:underline underline-offset-2">Результат</a>
          </span><span> • </span>
          
          <span>
            <a href="#4" class="no-underline hover:underline underline-offset-2">Оценка</a>
          </span><span> • </span>
          
          <span>
            <a href="#5" class="no-underline hover:underline underline-offset-2">Процесс</a>
          </span><span> • </span>
                    
          <span>
            <a href="#6" class="no-underline hover:underline underline-offset-2">Особенности</a>
          </span><span> • </span>
          
          <span>
            <a href="#7" class="no-underline hover:underline underline-offset-2">Сроки и стоимость</a>
          </span>
            
        </div>
        
        <a id="#1"></a>
        <a id="#2"></a>
        
        <RelatedLinks post={post} />
        
        <a id="#3"></a>
        
        <div class="max-w-7xl mx-auto px-4 sm:px-6 mb-10 md:mb-20 flex flex-col gap-6">
          <div class="text-sm text-[#95001B] tracking-wide font-semibold">РЕЗУЛЬТАТ</div>
          <div class="flex flex-col md:flex-row gap-14">
            <div class="flex flex-col gap-4">
              <h2 class="text-5xl group font-heading text-[#626262]">Наши инструменты</h2>
              <div class="flex flex-row gap-12">
                <Image src="~/assets/images/services/jira.svg" class="noir" height={48} alt="Jira" />
                <Image src="~/assets/images/services/figma.svg" class="noir" height={48} alt="Figma" />
                <Image src="~/assets/images/services/google-doc.svg" class="noir" height={48} alt="Google Docs" />
                <Image src="~/assets/images/services/miro.svg" class="noir" height={48} alt="Miro" />
              </div>
            </div>
            <div class="flex flex-col gap-4">
              <h2 class="text-5xl group font-heading text-[#626262]">Что вы получите:</h2>
              {post.results && (
                <div class="max-w-4xl mx-auto flex flex-col gap-6">
                  <Features3
                    columns={3}
                    items={ post.results?.map((item) => ({title: item.title, description: item.text})) }
                    classes={}
                    defaultIcon="tabler:circle-check-filled"
                  />
                </div>
              )}
            </div>
          </div>
        </div>
        
        <div class="max-w-7xl mx-auto px-4 sm:px-6 mb-10 md:mb-20 flex flex-col gap-6">
          <div class="flex flex-col md:flex-row gap-6">
            <div class="flex flex-col gap-4 bg-[#E7EAEA] p-6 grow basis-0">
              <h2 class="text-5xl group font-heading text-[#626262]">Экстра-польза:</h2>
              <div class="flex flex-col blue-check-list gap-4">
                <Markdown.Inline of={post.extra} />                
              </div>
            </div>
            <div class="flex flex-col gap-4 bg-[#E7EAEA] p-6 grow basis-0">
              <h2 class="text-5xl group font-heading text-[#626262]">Эффект в деньгах:</h2>
              <div class="flex flex-col blue-check-list gap-4">
                <Markdown.Inline of={post.roi} />                
              </div>
            </div>
          </div>
        </div>
        
        <a id="#4"></a>
        
        {post.notThisService && (
          <div class="max-w-7xl mx-auto px-4 sm:px-6 flex flex-col gap-6">
            <div class="text-sm text-[#95001B] tracking-wide font-semibold">ОЦЕНКА</div>
            <h2 class="text-5xl group font-heading text-[#626262]">{post.notThisService.title}</h2>
            <Features3
              columns={3}
              items={ notThisService }
              classes={}
              defaultIcon="tabler:circle-check-filled"
            />
          </div>
        )}
        
        <a id="#5"></a>
        <a id="#6"></a>
        <a id="#7"></a>
        
        <BlueBlock budget={post.budget} />
        
      </article>
    </section>
  
</Layout>
